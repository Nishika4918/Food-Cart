{"ast":null,"code":"import { Cart } from 'src/app/shared/models/Cart';\nimport { CartItem } from 'src/app/shared/models/CartItem';\nimport * as i0 from \"@angular/core\";\nexport class CartService {\n  addToCart(food) {\n    let cartItem = this.cart.items.find(item => item.food.id === food.id);\n    if (cartItem) {\n      this.changeQuantity(food.id, cartItem.quantity + 1);\n      return;\n    }\n    this.cart.items.push(new CartItem(food));\n  }\n  removeFromCart(foodId) {\n    this.cart.items = this.cart.items.filter(item => item.food.id != foodId);\n  }\n  changeQuantity(foodId, quantity) {\n    let cardItem = this.cart.items.find(item => item.food.id == foodId);\n    if (cardItem) {\n      return;\n    }\n    cardItem.quantity = quantity;\n  }\n  getCart() {\n    return this.cart;\n  }\n  constructor() {\n    this.cart = new Cart();\n  }\n}\nCartService.ɵfac = function CartService_Factory(t) {\n  return new (t || CartService)();\n};\nCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartService,\n  factory: CartService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["Cart","CartItem","CartService","addToCart","food","cartItem","cart","items","find","item","id","changeQuantity","quantity","push","removeFromCart","foodId","filter","cardItem","getCart","constructor","factory","ɵfac","providedIn"],"sources":["C:\\Users\\pct172\\source\\Angular\\food-app\\src\\app\\services\\cart\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cart } from 'src/app/shared/models/Cart';\nimport { Food } from 'src/app/shared/models/Food';\nimport { CartItem } from 'src/app/shared/models/CartItem';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  private cart : Cart = new Cart();\n\n  addToCart(food:Food):void{\n    let cartItem = this.cart.items.find(item=>item.food.id === food.id);\n    if(cartItem){\n      this.changeQuantity(food.id, cartItem.quantity + 1);\n      return;\n    }\n    this.cart.items.push(new CartItem(food));\n  }\n\n  removeFromCart(foodId:number):void{\n    this.cart.items = this.cart.items.filter(item=>item.food.id != foodId);\n  }\n\n  changeQuantity(foodId:number,quantity:number){\n    let cardItem = this.cart.items.find(item=>item.food.id == foodId);\n    if(cardItem){\n      return;\n    }\n    cardItem!.quantity= quantity;\n  }\n\n  getCart():Cart{\n    return this.cart;\n  }\n\n  constructor() { }\n}\n"],"mappings":"AACA,SAASA,IAAI,QAAQ,4BAA4B;AAEjD,SAASC,QAAQ,QAAQ,gCAAgC;;AAKzD,OAAM,MAAOC,WAAW;EAItBC,SAASA,CAACC,IAAS;IACjB,IAAIC,QAAQ,GAAG,IAAI,CAACC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,IAAI,IAAEA,IAAI,CAACL,IAAI,CAACM,EAAE,KAAKN,IAAI,CAACM,EAAE,CAAC;IACnE,IAAGL,QAAQ,EAAC;MACV,IAAI,CAACM,cAAc,CAACP,IAAI,CAACM,EAAE,EAAEL,QAAQ,CAACO,QAAQ,GAAG,CAAC,CAAC;MACnD;;IAEF,IAAI,CAACN,IAAI,CAACC,KAAK,CAACM,IAAI,CAAC,IAAIZ,QAAQ,CAACG,IAAI,CAAC,CAAC;EAC1C;EAEAU,cAAcA,CAACC,MAAa;IAC1B,IAAI,CAACT,IAAI,CAACC,KAAK,GAAG,IAAI,CAACD,IAAI,CAACC,KAAK,CAACS,MAAM,CAACP,IAAI,IAAEA,IAAI,CAACL,IAAI,CAACM,EAAE,IAAIK,MAAM,CAAC;EACxE;EAEAJ,cAAcA,CAACI,MAAa,EAACH,QAAe;IAC1C,IAAIK,QAAQ,GAAG,IAAI,CAACX,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,IAAI,IAAEA,IAAI,CAACL,IAAI,CAACM,EAAE,IAAIK,MAAM,CAAC;IACjE,IAAGE,QAAQ,EAAC;MACV;;IAEFA,QAAS,CAACL,QAAQ,GAAEA,QAAQ;EAC9B;EAEAM,OAAOA,CAAA;IACL,OAAO,IAAI,CAACZ,IAAI;EAClB;EAEAa,YAAA;IA3BQ,KAAAb,IAAI,GAAU,IAAIN,IAAI,EAAE;EA2BhB;;;mBA7BLE,WAAW;AAAA;;SAAXA,WAAW;EAAAkB,OAAA,EAAXlB,WAAW,CAAAmB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}